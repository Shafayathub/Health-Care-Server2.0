model AppointmentSlot {
  id          String       @id @default(cuid())
  doctorId    String
  startTime   DateTime
  isBooked    Boolean      @default(false)
  createdAt   DateTime     @default(now())

  doctor      Doctor       @relation(fields: [doctorId], references: [id])
  appointment Appointment?

  @@schema("public")
}

model Appointment {
  id            String            @id @default(cuid())
  patientId     String
  doctorId      String
  slotId        String            @unique
  status        AppointmentStatus @default(SCHEDULED)
  paymentStatus PaymentStatus     @default(UNPAID)
  videoCallId   String?           @unique
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  patient      Patient       @relation(fields: [patientId], references: [id])
  doctor       Doctor        @relation(fields: [doctorId], references: [id])
  slot         AppointmentSlot @relation(fields: [slotId], references: [id])
  payment      Payment?
  prescription Prescription?
  review       Review?

  @@schema("public")
}

model Payment {
  id                 String        @id @default(cuid())
  appointmentId      String        @unique
  amount             Float
  transactionId      String        @unique
  paymentStatus      PaymentStatus
  paymentGatewayData Json?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt

  appointment Appointment @relation(fields: [appointmentId], references: [id])

  @@schema("public")
}

model Prescription {
  id             String    @id @default(cuid())
  appointmentId  String    @unique
  doctorId       String
  medications    Json
  instructions   String?
  followUpOnDate DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  appointment Appointment @relation(fields: [appointmentId], references: [id])
  doctor      Doctor      @relation(fields: [doctorId], references: [id])

  @@schema("public")
}

model Review {
  id            String      @id @default(cuid())
  appointmentId String      @unique
  patientId     String
  doctorId      String
  rating        Int
  comment       String?
  createdAt     DateTime    @default(now())

  appointment Appointment @relation(fields: [appointmentId], references: [id])
  patient     Patient     @relation(fields: [patientId], references: [id])
  doctor      Doctor      @relation(fields: [doctorId], references: [id])

  @@schema("public")
}

model MedicalReport {
  id         String   @id @default(cuid())
  patientId  String
  reportName String
  reportLink String
  createdAt  DateTime @default(now())

  patient Patient @relation(fields: [patientId], references: [id])

  @@schema("public")
}